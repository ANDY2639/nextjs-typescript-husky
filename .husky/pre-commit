echo 'üé® Running Prettier and ESLint on staged files...'

# Relevant staged files
PRETTIER_FILES=$(git diff --cached --name-only --diff-filter=ACMR | grep -E '\.(js|ts|jsx|tsx|json|css|md|yml)$' | sed 's| |\\ |g')
ESLINT_FILES=$(git diff --cached --name-only --diff-filter=ACMR | grep -E '\.(js|ts|jsx|tsx)$' | sed 's| |\\ |g')

# Error flag
HAS_ERROR=0

# Apply Prettier
if [ -n "$PRETTIER_FILES" ]; then
  echo 'üñå Formatting with Prettier...'
  prettier $PRETTIER_FILES --write --ignore-unknown || {
    echo "‚ùå Error: Prettier found problems that he couldn't correct.."
    HAS_ERROR=1
  }
fi

# Apply ESLint
if [ -n "$ESLINT_FILES" ]; then
  echo 'üßπ Corriendo ESLint...'
  eslint $ESLINT_FILES --fix || {
    echo '‚ùå Error: ESLint found errors that it could not automatically correct.'
    HAS_ERROR=1
  }
fi

# If there were errors, cancel the commit
if [ $HAS_ERROR -ne 0 ]; then
  echo '‚õî Commit aborted due to lint or formatting errors.'
  exit 1
fi

# Reindexes modified files
echo "$PRETTIER_FILES" "$ESLINT_FILES" | xargs git add

echo '‚úÖ Files formatted, fixed, and ready for commit.'
